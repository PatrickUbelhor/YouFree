openapi: 3.0.2
info:
  title: YouFree?
  description: An application that makes it easier to find spare time for studying and hanging out with friends
  version: v0.1
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://192.168.0.0:61234/api/v1'
    description: Dev server

paths:
  /hello:
    get:
      summary: Hello World
      operationId: hello
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string

  /login:
    get:
      summary: Login
      description: ''
      operationId: login
      parameters:
        - name: username
          in: header
          required: true
          schema:
            type: string
        - name: password
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Incorrect username or password

  /user:
    post:
      summary: Create a new user
      description: ''
      operationId: createUser
      requestBody:
        description: New user to add to the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: successful operation
        '400':
          description: Fields cannot be null or empty

  /friends:
    get:
      summary: List friends of logged-in user
      operationId: getFriends
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  '/schedule/{id}':
    get:
      summary: Get the schedule of the specified user
      description: ''
      operationId: getSchedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: integer
                    format: int32
        '404':
          description: User not found
    put:
      summary: Updates the schedule of the logged-in user
      description: ''
      operationId: updateSchedule
      parameters:
        - name: id
          description: The ID of the user to modify
          deprecated: true
          in: path
          required: true
          schema:
            type: string
        - name: day
          description: 'The day of the week (0:Monday - 6:Sunday) to modify'
          in: header
          required: true
          schema:
            type: string
        - name: block
          description: 'The block of time (15 minute interval, 0 - 95) within the day'
          in: header
          required: true
          schema:
            type: string
        - name: status
          description: The desired status number to set for this time block
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: User not found

components:
  schemas:
    NewUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        displayName:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
        displayName:
          type: string
        schedule:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
